{
  "name": "ooze",
  "version": "0.0.20",
  "description": "Ooze ===",
  "main": "ooze.js",
  "scripts": {
    "test": "node ./test/test"
  },
  "author": "",
  "license": "BSD",
  "dependencies": {
    "weakmap": "0.0.x"
  },
  "devDependencies": {
    "grape": "~0.1.8"
  },
  "readme": "Ooze\n===\n\nA model event wrapper. The spiritual successor to gedi\n\nOoze lets you  wrap an object in an evented getter/setter API.\n\n## Usage\n\n### Instantiation\n\n    var someModel = {\n        // properties.\n    };\n\n    var Ooze = require('ooze'),\n        model = new Ooze(someModel);\n\nInstantiating Ooze returns a scope object, that can be used to access the object.\n\n\n### Get\n\n    // Simple\n    model.get('property');\n\n    // Deeper into the object\n    model.get('property.childProp');\n\n### Set\n\n    // Simple\n    model.set('property', 'value');\n\n    // Deeper into the object\n    model.set('property.childProp', 'value');\n\n### Listen to events\n\n    // Simple\n    model.on('property', function(property){...});\n\n    // Multiple paths (Space seperated)\n    model.on('property anotherProperty someOtherOne.childProp.grandchildProp', function(property, another, grandchild){...});\n\nhandlers will be called with 'this' as the event:\n\n    model.on('property', function(property){\n        var event = this;\n    });\n\nhandlers will be called if any of the bound paths changes.\n\nModel events will ONLY be raised if a change is made via Ooze. Changing values directly will not trigger handlers!\n\n### Create a new scope\n\n    var propertyModel = model.scopeTo('property');\n\n    // Calls to propertyModel will all be scoped to the 'property' path.\n\n    propertyModel.set('childProp', 3);\n\n    // The above is equivilent to:\n    model.set('property.childProp', 3);\n\n### Create a getter/setter\n\n    var getterSetter = model.bind('property');\n\n    // Get (no arguments)\n    getterSetter();\n\n    // The above is equivilent to:\n    model.get('property');\n\n    // Set (pass an argument)\n    getterSetter(3);\n\n    // The above is equivilent to:\n    model.set('property', 3);",
  "readmeFilename": "README.md",
  "_id": "ooze@0.0.20",
  "_from": "ooze@"
}
